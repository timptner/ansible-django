---
- hosts: test_hosts
  become: true

  vars:
    project_dir: /srv/farafmb
    service_user: farafmb
    service_group: farafmb

  vars_files:
    - vars/database.yaml

  pre_tasks:
    - name: Update apt cache
      ansible.builtin.dnf:
        update_cache: true

  roles:
    - role: geerlingguy.postgresql

  tasks:
    - name: Create user '{{ service_user }}'
      ansible.builtin.user:
        name: "{{ service_user }}"
        create_home: no
        system: yes

    - name: Create group '{{ service_group }}'
      ansible.builtin.group:
        name: "{{ service_group }}"

    - name: Install dependencies
      ansible.builtin.dnf:
        name:
          - nginx
          - git
          - python3
          # - python3-psycopg2
        state: present

    - name: Clone source code
      ansible.builtin.git:
        repo: 'https://github.com/timptner/farafmb-cms'
        dest: "{{ project_dir }}"
        version: main

    - name: Copy dotenv file
      ansible.builtin.template:
        src: "./templates/.env.example"
        desc: "{{ project_dir }}/.env"
        owner: root
        group: root
        mode: '0644'

    - name: Upgrade pip
      ansible.builtin.pip:
        name: pip
        virtualenv: "{{ project_dir }}/venv"
        virtualenv_command: "python3 -m venv"
        state: latest

    - name: Install service dependencies
      ansible.builtin.pip:
        requirements: "{{ project_dir }}/requirements.txt"
        virtualenv: "{{ project_dir }}/venv"
        virtualenv_command: "python3 -m venv"

    - name: Migrate database
      ansible.builtin.command: "{{ project_dir }}/venv/bin/python manage.py migrate"
      args:
        chdir: "{{ project_dir }}"

    - name: Install gunicorn
      ansible.builtin.pip:
        name: gunicorn
        virtualenv: "{{ project_dir }}/venv"
        virtualenv_command: "python3 -m venv"

    - name: Copy gunicorn service files
      ansible.builtin.template:
        src: "./templates/gunicorn.{{ item }}"
        dest: /etc/systemd/system/
        owner: root
        group: root
        mode: '0644'
      loop:
        - service
        - socket

    - name: Enable gunicorn service
      ansible.builtin.systemd:
        name: gunicorn
        state: restarted
        daemon_reload: yes

    - name: Copy nginx config file
      ansible.builtin.template:
        src: "./templates/nginx.conf"
        dest: /etc/nginx/conf.d/
        owner: root
        group: root
        mode: '0644'

    - name: Enable nginx service
      ansible.builtin.service:
        name: nginx
        state: reloaded
